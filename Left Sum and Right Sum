// in case of left sum and right sum we need to handle three cases
// when the element is 1st element
// when the element is present between first and last element
// when the element is last element


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    int n;
    cin>>n;
    int a[n];
    int rsum=0;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
        rsum+=a[i];
        
    }
    int b[n];
    int lsum=0;
    
    for(int i=0;i<n;i++)
    {
        if(i==0)
        {
            lsum=0;
            rsum-=a[i];
            b[i]=abs(lsum-rsum);
        }
        else if(i>0 && i<n-1)
        {
            lsum+=a[i-1];
            rsum-=a[i];
            b[i]=abs(lsum-rsum);
        }
        else if(i==n-1)
        {
            lsum+=a[i-1];
            rsum=0;
            b[i]=abs(lsum-rsum);
        }
    }
    for(int i=0;i<n;i++)
    {
        cout<<b[i]<<" ";
    }
    
    return 0;
}
